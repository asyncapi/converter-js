asyncapi: 3.0.0
info:
  title: AsyncAPI Sample App
  version: 1.0.1
channels:
  lightingMeasured:
    address: lightingMeasured
    messages:
      lightMeasured.message:
        payload:
          type: object
          properties:
            someProperty:
              type: string
            circularProperty:
              $ref: >-
                #/channels/lightingMeasured/messages/lightMeasured.message/payload
  turnOn:
    address: turnOn
    messages:
      publish.message:
        $ref: '#/components/messages/lightMeasured'
      subscribe.message.0:
        $ref: '#/components/messages/turnOnOff'
      customMessageId:
        messageId: customMessageId
        payload:
          type: object
          properties:
            someProperty:
              type: string
            circularProperty:
              $ref: '#/channels/turnOn/messages/customMessageId/payload'
operations:
  lightMeasured:
    action: receive
    channel:
      $ref: '#/channels/lightingMeasured'
    messages:
      - $ref: '#/channels/lightingMeasured/messages/lightMeasured.message'
  turnOn.publish:
    action: receive
    channel:
      $ref: '#/channels/turnOn'
    messages:
      - $ref: '#/components/messages/lightMeasured'
  turnOn.subscribe:
    action: send
    channel:
      $ref: '#/channels/turnOn'
    messages:
      - $ref: '#/components/messages/turnOnOff'
      - $ref: '#/channels/turnOn/messages/customMessageId'
components:
  channels:
    someChannel:
      address: someChannel
      messages:
        publish.message:
          $ref: '#/components/messages/lightMeasured'
        subscribe.message.0:
          $ref: '#/components/messages/turnOnOff'
        customMessageId:
          messageId: customMessageId
          payload:
            type: object
            properties:
              someProperty:
                type: string
              circularProperty:
                $ref: >-
                  #/components/channels/someChannel/messages/customMessageId/payload
  messages:
    turnOnOff:
      summary: Command a particular streetlight to turn the lights on or off.
      payload:
        $ref: '#/components/schemas/turnOnOffPayload'
  schemas:
    turnOnOffPayload:
      type: object
      properties:
        command:
          type: string
          enum:
            - 'on'
            - 'off'
          description: Whether to turn on or off the light.
        sentAt:
          $ref: '#/components/schemas/sentAt'
    sentAt:
      type: string
      format: date-time
      description: Date and time when the message was sent.
  parameters:
    streetlightId:
      description: The ID of the streetlight.
      schema:
        type: string
  operations:
    someChannel.publish:
      action: receive
      channel:
        $ref: '#/components/channels/someChannel'
      messages:
        - $ref: '#/components/messages/lightMeasured'
    someChannel.subscribe:
      action: send
      channel:
        $ref: '#/components/channels/someChannel'
      messages:
        - $ref: '#/components/messages/turnOnOff'
        - $ref: '#/components/channels/someChannel/messages/customMessageId'
